# /apps/stack/docker-compose.yml
networks:
  appnet:
    external: true
    name: stack_appnet

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: memo
      POSTGRES_USER: HPLB
      POSTGRES_PASSWORD: 20250817
    ports:
      - "5432:5432"
    networks:
      - appnet

  memoservice:
    image: ghcr.io/shaojunliu/memoservice:latest
    container_name: memoservice
    env_file:
      - /apps/stack/.env
    expose:
      - "8080:8080"                   # 仅容器网络内可访问
    networks:
      - appnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/8080' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/memo?currentSchema=public
      DB_DRIVER: org.postgresql.Driver
      DB_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      DB_DDL_AUTO: validate
      DB_USER: HPLB
      DB_PASS: 20250817
        - SERVER_PORT=8080
        - SERVER_ADDRESS=0.0.0.0
      APP_AGENT_BASE_URL: ws://agent:8001/ws/chat   # 内网调用

  agent:
    image: ghcr.io/shaojunliu/agent:latest
    container_name: agent
    env_file:
      - /apps/stack/.env
    expose:
      - "8001"                   # 仅容器网络内可访问（不对公网）
    networks:
      - appnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8001/healthz"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    environment:
      DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY}
      AGENT_API_KEY: ${AGENT_API_KEY}
      OPEN_API_KEY: ${OPEN_API_KEY}
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

  nginx:
    image: nginx:alpine
    container_name: memo-nginx
    depends_on:
      - memoservice
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /apps/stack/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /apps/stack/certbot/www:/var/www/certbot
      - /apps/stack/letsencrypt:/etc/letsencrypt
    networks:
      - appnet
    restart: unless-stopped

  # 首次签发证书用的一次性容器；签发成功后即可不再使用
  certbot_init:
    image: certbot/certbot
    container_name: certbot-init
    volumes:
      - /apps/stack/certbot/www:/var/www/certbot
      - /apps/stack/letsencrypt:/etc/letsencrypt
    entrypoint: ["/bin/sh","-c"]
    # 把 memo.example.com 和邮箱改成你的
    command: >
      "certbot certonly --webroot
       -w /var/www/certbot
       -d hplb.top
       --email liu_shaojun@yeah.net
       --agree-tos
       --non-interactive
       || true"